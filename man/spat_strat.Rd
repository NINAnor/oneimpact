% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spat_strat.R
\name{spat_strat}
\alias{spat_strat}
\title{Preparing data for spatially stratified cross‚Äêvalidation schemes}
\usage{
spat_strat(
  x,
  colH0 = NULL,
  colID = NULL,
  k = 4,
  block_size = 10000,
  buffer = 1000,
  coords = NULL,
  all_cols = FALSE,
  crs = "",
  plot_grid = TRUE,
  save_grid = c(NA_character_, "raster", "vector")[1]
)
}
\arguments{
\item{x}{Points, in sf, SpatialPoints, or terra - points to be spatially stratified}

\item{colH0}{Column number or name to define the ids of the H0 level - the one with ecological meaning, e.g. individual,
population, or study area, used for testing the predictions of the fitted model.}

\item{k}{Number of parts for k-fold cross validation within H1 hierarchical level - to set the penalty parameter}

\item{block_size}{size (side of a square) of the blocks for H2 level. H1 level blocks size are defined as sqrt(k)*block_size.}

\item{buffer}{\code{max_step_length} buffer around the points, to make sure all points are included}

\item{coords}{vector with the names of the columns with the (x,y) coordinates of animal locations or step start/end points}

\item{all_cols}{logical. If TRUE, and if \code{x} is a \code{data.frame}, the spatial strata blocks are appended as columns in the
input data \code{x}.}

\item{crs}{CRS of the points, if \code{x} is a data.frame}

\item{plot_grid}{Should we plot the grid and points?}

\item{save_grid}{Should the grid which defines the H1 and H2 blocks be saved?}

\item{col_id}{id of the rows}
}
\value{
A \code{data.frame} with the number of the blocks at hierarchical levels H0, H1, and H2.
If \code{x} is a \code{data.frame} and
}
\description{
Hierarchical levels H0, H1, and H2.
}
\note{
Implement for input = data.frame
#terra::vect(data\link{data$case==1,}, geom = c("x", "y"))
Implement method for track object - already have crs
Put H0 here as well.
}
\examples{
data(reindeer)
library(terra)
library(amt)
spat_strat(reindeer, block_size = 5000, coords = c("x", "y"))

spst <- spat_strat(reindeer, coords = c("x", "y"), colH0 = "original_animal_id",
                   all_cols = F)
# Visualize level H0 - individuals
spst_vect <- terra::vect(spst, geom = c("x", "y"))
terra::plot(spst_vect, "blockH0")
# Visualize level H1
terra::plot(spst_vect, "blockH1", type = "classes")
# Visualize level H2 for blockH1 numbers 6 to 10
terra::plot(spst_vect, col = grey(0.7))
terra::plot(spst_vect[spst$blockH1 == 6], "blockH2", type = "classes", add = TRUE) # only 6
terra::plot(spst_vect[spst$blockH1 \%in\% c(6,7,10,11)], "blockH2", type = "classes", add = TRUE) # 6-10
terra::plot(spst_vect[spst$blockH1 == 6], "blockH2", type = "classes") # zoom to 6

}
