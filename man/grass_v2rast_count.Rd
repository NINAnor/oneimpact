% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grass_v2rast_count.R
\name{grass_v2rast_count}
\alias{grass_v2rast_count}
\title{Rasterizes a vector counting the number of features in each pixel}
\usage{
grass_v2rast_count(
  x,
  output = paste0(x, "_count"),
  column = NULL,
  input_as_region = FALSE,
  align = NULL,
  remove_intermediate = TRUE,
  quiet = TRUE,
  verbose = FALSE,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{x}{Input vector map.}

\item{output}{Output map name.}

\item{column}{\verb{[chracter(1)=NULL} \cr Default is \code{NULL}. If not \code{NULL}, the name of a column
in the input vector \code{x} that corresponds to the column to be summed to count the number
of features in each pixel of the output raster map. If \code{NULL}, this column is created in
a temporary vector, with all values equal 1.}

\item{input_as_region}{\verb{[logical(1)=FALSE]} \cr Default is FALSE. Whether the GRASS GIS
computational region should be set within the function (to the extent of \code{x}) or not.
If \code{FALSE}, the current computational region is used.}

\item{align}{\verb{[character(1)=NULL]} \cr Name of a raster map with which to align the
computational region to produce the output map.}
}
\description{
Add within and other arguments for grass functions as options/parameters
}
\examples{
# libraries
library(rgrass7)
library(raster)
library(terra)
library(dplyr)
library(sf)

# connect to grass gis 7.8
grassdir <- system("grass78 --config path", intern = T)
gisDB <- "/data/grass"
loc <- "ETRS_33N/"
ms <- "u_bb_cuminf"
rgrass7::initGRASS(gisBase = grassdir,
                   home = tempdir(),
                   override = T,
                   gisDbase = gisDB,
                   location = loc,
                   mapset = ms)

# input region
rgrass7::use_sf()
(s <- system.file("vector/study_area.gpkg", package = "oneimpact"))
test_region_name <- "region_test_oneimpact_pkg"
sf::st_read(s) \%>\%
  rgrass7::writeVECT(vname = test_region_name, v.in.ogr_flags = "overwrite")

# set region
rgrass7::execGRASS("g.region", vector = test_region_name, res = "100", flags = c("p"))

# input vector
(c <- system.file("vector/cabins_vect.gpkg", package = "oneimpact"))
cabins_vect_name <- "private_cabins_vect"
sf::st_read(c) \%>\%
  rgrass7::writeVECT(vname = cabins_vect_name, v.in.ogr_flags = "overwrite")

# rasterize with count, creating a new temp_vector
cabins_count_name <- grass_v2rast_count(cabins_vect_name, output = "cabins_count",
                                        quiet = F, overwrite = T)

# rasterize with count, without creating a temporary vector
cabins_count_name <- grass_v2rast_count(cabins_vect_name, output = "cabins_count",
                                        column = "value", quiet = F, overwrite = T)

# visualize
rgrass7::use_sp()
rgrass7::readRAST(cabins_count_name) \%>\%
  raster::raster() \%>\%
  terra::rast() \%>\%
  plot(main = "Number of private cabins")

# remove rasters created
to_remove_vect <- c(test_region_name, cabins_vect_name)
to_remove_rast <- c(cabins_count_name)
# rgrass7::execGRASS("g.remove", type = "vect", name = to_remove_vect, flags = "f")
# rgrass7::execGRASS("g.remove", type = "rast", name = to_remove_rast, flags = "f")
}
