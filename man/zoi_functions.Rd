% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zoi_functions.R
\name{zoi_functions}
\alias{zoi_functions}
\alias{exp_decay}
\alias{threshold_decay}
\alias{step_decay}
\alias{bartlett_decay}
\alias{tent_decay}
\alias{linear_decay}
\alias{gaussian_decay}
\alias{half_norm_decay}
\title{Zone of Influence (ZoI) functions}
\usage{
exp_decay(
  x,
  zoi_radius = NULL,
  exp_decay_parms = c(1, 0.01),
  zoi_limit = 0.05,
  origin = 0,
  half_life = NULL,
  zoi_hl_ratio = NULL,
  oneside = TRUE
)

threshold_decay(
  x,
  zoi_radius,
  constant_influence = 1,
  origin = 0,
  oneside = TRUE
)

step_decay(x, zoi_radius, constant_influence = 1, origin = 0, oneside = TRUE)

bartlett_decay(x, zoi_radius, intercept = 1, origin = 0, oneside = TRUE)

tent_decay(x, zoi_radius, intercept = 1, origin = 0, oneside = TRUE)

linear_decay(x, zoi_radius, intercept = 1, origin = 0, oneside = TRUE)

gaussian_decay(
  x,
  zoi_radius = NULL,
  hnorm_decay_parms = c(1, 0.01),
  sigma = NULL,
  zoi_limit = 0.05,
  origin = 0,
  ...
)

half_norm_decay(
  x,
  zoi_radius = NULL,
  hnorm_decay_parms = c(1, 0.01),
  sigma = NULL,
  zoi_limit = 0.05,
  origin = 0,
  ...
)
}
\arguments{
\item{x}{\verb{[numeric,SpatRaster,RasterLayer]} \cr Euclidean distance from an infrastructure, source
of disturbance, or feature/class of interest. It can be a single value, an array
of values, or a raster object. It must not necessarily be an Euclidean distance,
but preferably it should be a distance measured in meters, to ease interpretation
(e.g. geodesic distance).}

\item{zoi_radius}{\verb{[numeric(1)]} \cr Zone of Influence (ZoI) radius,
the distance at which the ZoI vanishes or goes below a given minimum limit value
\code{zoi_limit}. See details.}

\item{exp_decay_parms}{\verb{[numeric(2)=c(1,0.01)]} \cr For the \code{exp_decay} function,
these are the exponential decay parameters c(N, lambda), where N is the maximum
value of the function (at \code{x = 0})
and lambda is the decay parameter of the exponential function.
The value for \code{lambda} is only considered to draw the exponential decay function
if both \code{zoi_radius = NULL} and \code{half_life = NULL}.}

\item{zoi_limit}{\verb{[numeric(1)=0.05]} \cr For non-vanishing functions
(e.g. \code{exp_decay}, \code{gaussian_decay}), this value is used to set the relationship
between the ZoI radius and the decay functions:
\code{zoi_radius} is defined as the minimum distance \code{x} at which the ZoI assumes values
below \code{zoi_limit}. The default is 0.05. This parameter is used only
if \code{zoi_radius} is not \code{NULL}.}

\item{origin}{\verb{[numeric(1)=0]} \cr In which position (in 1 dimension) is located
the infrastructure or source of disturbance? Default is zero. For raster objects,
this parameter should be ignored.}

\item{half_life}{\verb{[numeric(1)=NULL]} \cr Half life of the exponential decay
function, in meters. By definition, the half life is
the distance where the exponential decay function reaches 0.5 of its
maximum value. For the \code{exp_decay} function,
if the ZoI radius parameter is null (\code{zoi_radius = NULL}), the value of the
exponential half life (\code{half_life = log(2)/lambda}) can used to parameterize the
exponential decay function.}

\item{zoi_hl_ratio}{\verb{[numeric(1)=NULL]} \cr For the \code{exp_decay} function,
if both the ZoI radius \code{zoi_radius} and \code{zoi_hl_ratio} are given and
\code{half_life} is \code{NULL}, this value is used
to set the ZoI radius (and \code{zoi_limit} is ignored).
\code{zoi_hl_ratio} is the ratio between the
ZoI radius value and the half life of the exponential function.
For instance, if \code{zoi_radius = 1200} and \code{zoi_hl_ratio = 6}, this means
\code{half_life} is 200. As a consequence, the exponential decay ZoI function
decreases to 0.5 at distance 200, and the ZoI radius = 1200
is defined as the distance
at which the ZoI decreases to 0.5**6 = 0.015625.}

\item{oneside}{\verb{[logical(1)=TRUE]} \cr If \code{FALSE}, negative distance values
are considered symmetrically and their transformation is always positive.
In general, this parameter does not make sense for raster objects.}

\item{constant_influence}{\verb{[numeric(1)=1]} \cr Constant value of the
threshold (or step) function within the Zone of Influence. Default is 1.}

\item{intercept}{\verb{[numeric(1)=1]} For the Bartlett (linear or tent decay) function,
\code{intercept} is the maximum value of the function (at \code{x = 0}).}

\item{hnorm_decay_parms}{\verb{[numeric(2)=c(1,0.01)]} \cr For the \code{gaussian_decay} function,
these are the guassian decay parameters c(N, lambda), where N is the maximum
value of the function (at \code{x = 0})
and lambda is the decay parameter of the Gaussian function.
The value for \code{lambda} is only considered to draw the Gaussian decay function
if both \code{zoi_radius = NULL} and \code{sigma = NULL}.}

\item{sigma}{\verb{[numeric(1)=NULL]} \cr Standard deviation of the Gaussian
function. It related to the Gaussian decay rate \eqn{\lambda} as
\code{lambda = 1/(2*sigma^2)}. Only considered to compute the ZoI
for the \code{gaussian_decay} function when the ZoI radius parameter is null
(\code{zoi_radius = NULL}).}
}
\value{
The ZoI values for a given array of x values, or a raster
object delimiting the ZoI if x corresponds to the distance from
infrastructure or disturbance sources in 2 dimensional space.
}
\description{
Computes the Zone of Influence (ZoI) decay functions.
The functions with different shapes represent multiple ways
the ZoI of an infrastructure or disturbance might affect a
given process in space, and the ZoI radius (\code{zoi_radius})
controls how far this effect reaches. The rate
of decay of the different ZoI functions is parameterized based on
the ZoI radius -- e.g the slope of \code{linear_decay} is defined
so that the function decreases to zero at the ZoI radius.
These functions can be used to transform arrays of (Euclidean)
distance values (in one dimension) or rasters of (Euclidean) distance
(in two dimensions) into ZoI values. The distances might represent
the distance to human infrastructure, sources of disturbance, or
more broadly any type of land use class or spatial variable.
}
\details{
For the threshold function (\code{threshold_decay}) and the linear decay
function (\code{linear_decay}), the ZoI radius (\code{zoi_radius}) is the
distance \code{x} where the ZoI function value decreases to zero.
For the linear decay, this is done by setting
the slope of the linear function as \code{-intercept/zoi_radius}, where \code{intercept}
is the intercept of the linear function (here, the maximum value at \code{x = 0}).

For non-vanishing functions that approach zero asymptotically
(\code{exp_decay}, \code{gaussian_decay}), a certain limit value must be given to define
the ZoI radius -- so that the ZoI radius is defined as the distance \code{x} where the
ZoI function goes below this limit value. For these functions,
different parameters are available
for setting the relationship between the ZoI function value and the ZoI radius.

Some functions have multiple possible names, for the sake of flexibility:
\itemize{
\item \code{linear_decay()}, \code{bartlett_decay()}, and \code{tent_decay()} are the
same function;
\item \code{threshold_decay()} and \code{step_decay()} are the same function;
\item \code{gaussian_decay()} and \code{half_norm_decay()} are the same function.
}

Other functions might be implemented.
}
\section{Definitions}{
Here are some formal definitions for the ZoI functions \eqn{\phi(d_i, r)},
where \eqn{d_i} is the distance to the feature \eqn{i} of an infrastructure or
source of disturbance and \eqn{r} is the ZoI radius:
\itemize{
\item \code{threshold_decay}: the threshold or step decay function \eqn{\phi_{threshold}} is
positive and constant within the ZoI radius \eqn{r}, and null for \eqn{x \ge r}:
\deqn{
\phi_{threshold}(d_i, r_k) = c if d_i < r, 0 otherwise
}
where \eqn{c} is a constant value (by default = 1).
\item \code{linear_decay}: the linear (or tent/Bartlett) decay function \eqn{\phi_{linear}}
decreases
linearly from a maximum value \eqn{b} (the intercept, by default = 1) to
zero when \eqn{x \ge r}:
\deqn{\phi_{linear}(d_i, r) = b - b/r if x < r, 0 otherwise}
\item \code{exp_decay}: the exponential decay function \eqn{\phi_{exp}} decreases
exponentially from a maximum value \eqn{N} (by default = 1) with a rate
\eqn{\lambda}, which is defined by \eqn{r} and a ZoI limit value
\eqn{\phi_{lim}}, a small ZoI value below which the effect is considered negligible:
\deqn{\phi_{exp}(d_i, r, \phi_{lim}) = N exp(-\lambda d_i)}
with
\deqn{\lambda = ln(1/\phi_{lim}) / r}
In this context, the ZoI radius \eqn{r} is the distance beyond which
\eqn{\phi_{exp} < \phi_{lim}}.
\item \code{gaussian_decay}: the Gaussian decay function \eqn{\phi_{Gauss}}
follows a Gaussian (half-normal) decay with maximum \eqn{N} (by default = 1)
and a decay rate \eqn{\lambda}
defined by \eqn{r} and a ZoI limit value
\eqn{\phi_{lim}}, a small ZoI value below which the effect is considered negligible:
\deqn{\phi_{Gauss}(d_i, r, \phi_{lim}) = N exp(-\lambda d_i^2)}
with
\deqn{\lambda = ln(1/\phi_{lim}) / (r^2)}
In this context, the ZoI radius \eqn{r} is the distance beyond which
\eqn{\phi_{exp} < \phi_{lim}}. Note that \eqn{\lambda} is defined differently
for the \code{gaussian_decay} and the \code{exp_decay} functions.
}
}

\examples{
library(ggplot2)

# test influence functions

# exponential decay
exp_decay(10, zoi_radius = 30)

f1 <- ggplot(data.frame(x = c(0, 30)), aes(x = x)) +
  stat_function(fun = exp_decay, args = list(zoi_radius = 20)) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f1

# exponential decay - two sides
f1_2 <- ggplot(data.frame(x = c(-30, 30)), aes(x = x)) +
  stat_function(fun = exp_decay,
                args = list(zoi_radius = 20, oneside = FALSE)) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f1_2

# threshold
threshold_decay(5, zoi_radius = 10)
threshold_decay(10, zoi_radius = 10)

f2 <- ggplot(data.frame(x = c(0, 30)), aes(x = x)) +
  stat_function(fun = threshold_decay,
                args = list(zoi_radius = 20), linetype = 2) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f2

# threshold - two sides
f2_2 <- ggplot(data.frame(x = c(-30, 50)), aes(x = x)) +
  stat_function(fun = threshold_decay,
                args = list(zoi_radius = 20, oneside = FALSE), linetype = 2) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f2_2

# linear, tent, or bartlett decay
bartlett_decay(5, zoi_radius = 10)
bartlett_decay(8, zoi_radius = 10)

f3 <- ggplot(data.frame(x = c(0, 30)), aes(x = x)) +
  stat_function(fun = bartlett_decay, args = list(zoi_radius = 20), linetype = 3) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f3

# linear, two sides
f3_3 <- ggplot(data.frame(x = c(-30, 40)), aes(x = x)) +
  stat_function(fun = bartlett_decay,
                args = list(zoi_radius = 20, origin = 10, oneside = FALSE), linetype = 3) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
f3_3

# guassian or half normal
gaussian_decay(5, sigma = 6)

f4 <- ggplot(data.frame(x = c(0, 30)), aes(x = x)) +
  stat_function(fun = gaussian_decay,
                args = list(zoi_radius = 20, zoi_limit = 0.05), linetype = 4) +
  labs(x = "Distance", y = "Zone of Influence") +
  geom_vline(xintercept = 20, linetype = 2, color = "darkgrey") +
  geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
  theme_bw()
f4

# half normal - two sides
gaussian_decay(5, sigma = 6)

f4_2 <- ggplot(data.frame(x = c(-30, 30)), aes(x = x)) +
  stat_function(fun = gaussian_decay,
                args = list(zoi_radius = 20, zoi_limit = 0.05), linetype = 4) +
  labs(x = "Distance", y = "Zone of Influence") +
  geom_vline(xintercept = c(-20, 20), linetype = 2, color = "darkgrey") +
  geom_hline(yintercept = 0.05, linetype = 2, color = "darkgrey") +
  theme_bw()
f4_2

# plot several ZoI with the same radius
f1 +
  stat_function(fun = threshold_decay, args = list(zoi_radius = 20), linetype = 2) +
  stat_function(fun = bartlett_decay, args = list(zoi_radius = 20), linetype = 3) +
  stat_function(fun = gaussian_decay, args = list(zoi_radius = 20, zoi_limit = 0.05), linetype = 4) +
  labs(x = "Distance", y = "Zone of Influence") +
  theme_bw()
}
