% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_dist.R
\name{calc_dist}
\alias{calc_dist}
\title{Calculate distance from the nearest feature}
\usage{
calc_dist(
  points,
  transform_dist = NULL,
  log_base = exp(1),
  dist_offset = 1,
  extent_x_cut = bbox(points)[1, ],
  extent_y_cut = bbox(points)[2, ],
  plotit = FALSE
)
}
\arguments{
\item{points}{\verb{[RasterLayer]} \cr Raster representing locations of features, with 1 where the features
are located and NA elsewhere.}

\item{transform_dist}{\verb{[character(1)=NULL]\{"log","sqrt"\}} \cr By default, NULL. If "log", the distances are
log-transformed. If "sqrt", the output is \code{sqrt(distance)}. Other options still to be implemented.}

\item{log_base}{\verb{[numeric(1)=exp(1)]} \cr Base of the logarithm, if \code{log_base} is TRUE.}

\item{dist_offset}{\verb{[numeric(1)=1]} \cr Number to add to distance before transforming it,
to avoid \code{-Inf}/\code{Inf} values (e.g. in the case of log). It should be a very small value compared to the
range of values of distance.}

\item{extent_x_cut, entent_y_cut}{\verb{[numeric vector(2)=c(0,1)]} \cr Vectors representing the minimum and
maximum extent in x and y for the final output, in the format c(min,max). The default is to
keep the same extent of the input raster.}

\item{plotit}{\verb{[logical(1)=FALSE]} \cr Should the outputs be plotted along the calculation?}
}
\value{
A RasterLayer with the distance to the nearest feature. Depending on the choice of
\code{transform_dist}, the output distance can be log- or sqrt-transformed. Other types of transformation
to be implemented.
}
\description{
This function takes in a raster with locations of infrastructure and calculates
a raster representing the distance from each pixel to the neareast feature.
The output distance can be transformed (log, sqrt).
}
\details{
TO IMPROVE1: implement with \code{terra}.

TO IMPROVE2: do the same in communication with GRASS GIS.

TO IMPROVE3: Add other possible transformations to distance.
}
\examples{
library(mobsim)
library(raster)

set.seed(1234)

# set points
ext <- 30000
wd <- ext/20
pts <- set_points(n_features = 1000, centers = 1,
                  width = wd, res = 100,
                  extent_x = c(0, ext), extent_y = c(0, ext))
plot(pts$pts)
plot(pts$rast)

# calculate distance to the nearest feature
d <- calc_dist(pts$rast)
plot(d)

# calculate log_dist (the rest is equal)
log_d <- calc_dist(pts$rast,
                   transform_dist = "log", log_base = 10)
plot(log_d)

# calculate sqrt_dist (the rest is equal)
sqrt_d <- calc_dist(pts$rast, transform_dist = "sqrt")
plot(sqrt_d)

}
