% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_resamples.R
\name{create_resamples}
\alias{create_resamples}
\title{Create samples for fitting, calibrating, and validating models}
\usage{
create_resamples(
  y,
  times = 10,
  p = c(0.4, 0.2, 0.2),
  max_size_validation_blockH0 = 1000,
  max_size_validation_blockH1 = 1000,
  max_size_validation_blockH2 = 1000,
  max_number_fit_blockH1 = 15,
  sp_strat = NULL,
  colH0 = NULL,
  H0setup = c("LAO", "LOO")[1],
  list = TRUE,
  replace = TRUE
)
}
\arguments{
\item{y}{\verb{[vector]} \cr A vector of outcomes.}

\item{times}{\verb{[numeric(1)=10]} \cr The number of partitions or samples to create.}

\item{p}{\verb{[numeric(3)=c(0.4,0.2,0.2)]} \cr A 3 element numeric vector with the percentage of data that goes to
fitting/training (H1), testing (H2), and validation (H0). Values should be between 0 and 1 and should
not sum more than 1.}

\item{max_size_validation_blockH0}{\verb{[numeric(1)=1000]} \cr Maximum size of the validation block H0.
Used to limit the number of observations in the validation set, to keep fitting relatively
fast and avoid sampling too many observations of the block H0 levels with more observations,
for imbalanced data sets.}

\item{max_number_fit_blockH1}{\verb{[numeric(1)=15]} \cr Maximum number of levels or blocks H1 to be used
for model fitting/training.}

\item{sp_strat}{\verb{[data.frame]} \cr Default is \code{NULL}. If not \code{NULL}, the \code{data.frame} resulting
from spat_strat() should be used here.}

\item{colH0}{\verb{[numeric,character,vector]} \cr Column number or name to define the IDs of the H0 level -
the one with ecological meaning, e.g. individual, population, or study area, used for validating the
predictions of the fitted model. If \code{sp_strat} is provided,
\code{colH0} is a string with the column name (or the column number) in the \code{sp_strat} table.
If \code{sp_strat = NULL}, \code{colH0} is a vector of H0 values with the same length as \code{y}.
If \code{colH0 = NULL} (Default), no H0 level is defined.}

\item{H0setup}{Setup for the H0 (validate) block. Either "LAO" (Leave-a-small-bit-of-All-Out) or "LOO"
(Leave-One-Out). For instance, if H0 corresponds to the animal populations, "LAO" will keep some observations
of each and all populations in the H0 (validation) set.}

\item{list}{logical - should the results be in lists (TRUE) or matrices with the number of rows equal to
floor(p * length(y)) and times columns.}

\item{replace}{\verb{[logical(1)=TRUE]} \cr Whether to perform the bootstrap sampling with or without
replacement (Default is \code{TRUE}).}
}
\description{
The function creates samples of the data to be included for three different
model blocks: train (fitting), test (calibrate), and validate.
By default, samples are created through bootstrapping, i.e. with replacement. This means
data observations can be repeated within a given sample block, but observations included
in one block are necessarily excluded from the other blocks (e.g. observations selected
for validation will be absent from train and test blocks).
}
\details{
Samples can be created at random (if \code{spat_strat = NULL}, default) or with spatial
stratification (spatial strata can be created with the function \code{\link[=spat_strat]{spat_strat()}}.
Also, samples might include a specific variable (with classes or groups) H0 to be used for
validation (if \code{colH0} is provided), but this is not a requirement.
}
\examples{
# random sampling, no validation block H0
y <- runif(200)
samples <- create_resamples(y, p = c(0.4, 0.2, 0.2), times = 5)
samples

# with validation block H0
data(reindeer)
library(terra)
library(amt)

# random sampling, with validation block H0
samples <- create_resamples(1:nrow(reindeer), times = 5,
                            p = c(0.2, 0.2, 0.2),
                            max_size_validation_blockH0 = 1000,
                            colH0 = reindeer$original_animal_id,
                            list = FALSE)
samples

# spatially stratified sampling, with validation block H0
spst <- spat_strat(reindeer, coords = c("x", "y"), colH0 = "original_animal_id",
                   all_cols = F)
samples <- create_resamples(1:nrow(reindeer), times = 5,
                            p = c(0.2, 0.2, 0.2),
                            max_number_fit_blockH1 = 20,
                            sp_strat = spst,
                            colH0 = "blockH0")
samples
sum(is.na(samples$test[[1]]))
sapply(samples$train, function(x) sum(is.na(x)))
sapply(samples$test, function(x) sum(is.na(x)))

# small number of blocks or too high p[1] might incur in errors
samples <- create_resamples(1:nrow(reindeer), times = 10,
                            max_number_fit_blockH1 = 3,
                            sp_strat = spst,
                            colH0 = "blockH0")

}
