% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_dist_dens.R
\name{calc_dist_dens}
\alias{calc_dist_dens}
\title{Calculate distance from the nearest feature and density of features}
\usage{
calc_dist_dens(
  points,
  transform_dist = NULL,
  log_base = exp(1),
  dist_offset = 1,
  half_life = NULL,
  exp_decay_parms = c(1, 0.01),
  bartlett_zoi = NULL,
  type_density = c("Gauss", "circle", "rectangle")[1],
  scale = 100,
  extent_x_cut = bbox(points)[1, ],
  extent_y_cut = bbox(points)[2, ],
  plotit = FALSE,
  ...
)
}
\value{
A RasterBrick with de distance to the nearest feature and the densities for all scales selected.
}
\description{
This function takes in a raster with locations of infrastructure and calculates (1)
a raster representing the distance from each pixel to the neareast feature and (2)
a raster (or set of rasters, in case there is more the one value for \code{scale})
representing the density of features in space (through a spatial filter/neighborhood analysis).
The neighborhood analysis is done with the \code{\link[raster:focal]{raster::focal()}} function.
}
\details{
The neighborhood analysis can be done with different methods. The default is a Gaussian filter
(\code{type_density = "Gauss"}), in which case scale corresponds to the sigma paramater of the Gaussian
filter. If \code{type_density = "circle"} or \code{type_density = "rectangle"}, the scale corresponds to the
radius of the circle or width of the rectangle, respectively. See \code{\link[raster:focalWeight]{raster::focalWeight()}} for more
details.

TO IMPROVE1: implement with \code{terra}.

TO IMPROVE2: do the same in communication with GRASS GIS.

TO IMPROVE3: Add other possible transformations to distance.
}
\examples{
library(mobsim)
library(raster)

set.seed(1234)

# set points
ext <- 30000
wd <- ext/20
pts <- set_points(n_features = 1000, centers = 1,
                  width = wd, res = 100,
                  extent_x = c(0, ext), extent_y = c(0, ext),
                  buffer_around = 10000)
plot(pts$pts)
plot(pts$rast)

# calculate distance and densities considering only the initial extent
scales <- c(250, 500, 1000, 2500, 5000)/2
dist_dens <- calc_dist_dens(pts$rast, type_density = "Gauss", scale = scales,
                            extent_x_cut = c(0, ext), extent_y_cut = c(0, ext))
plot(dist_dens)

# calculate exp_decay (the rest is equal)
log_dist_dens <- calc_dist_dens(pts$rast, type_density = "Gauss", scale = scales,
                                transform_dist = "exp_decay", half_life = 200,
                                extent_x_cut = c(0, ext), extent_y_cut = c(0, ext))
plot(log_dist_dens)


# set points
ext <- 30000
wd <- ext/20
pts <- set_points(n_features = 1000, centers = 1,
                  width = wd, res = 100,
                  extent_x = c(0, ext), extent_y = c(0, ext),
                  buffer_around = 0)
plot(pts$pts)
plot(pts$rast)

# calculate distance and densities considering only the initial extent
scales <- c(250, 500, 1000, 2500, 5000)/2
dist_dens <- calc_dist_dens(pts$rast, type_density = "Gauss", scale = scales, pad = T)
plot(dist_dens)
}
