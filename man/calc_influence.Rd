% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_influence.R
\name{calc_influence}
\alias{calc_influence}
\title{Calculates the influence from the nearest feature and the cumulative influence of infrastructure features}
\usage{
calc_influence(
  x,
  zoi,
  transform_nearest = NULL,
  type_cumulative = c("circle", "Gauss", "rectangle", "mfilter")[1],
  extent_x_cut = bbox(x)[1, ],
  extent_y_cut = bbox(x)[2, ],
  ...
)
}
\arguments{
\item{x}{\verb{[RasterLayer,SpatRaster]} \cr Raster representing locations of features, with value 1
(or any other positive value) where the features are located and NA elsewhere.
Can be a \linkS4class{Raster} object (e.g. \code{RasterLayer}) from \link{raster-package} or a
\link{SpatRaster} from \link{terra-package}.
The features might be represented by points (e.g. houses, cabins, wind turbines), lines
(e.g. roads, power lines, railways), or polygons (e.g. mining areas, urban areas, or
any other spatial variable represented as polygons or areas).}

\item{zoi}{\verb{[numeric(1)=NULL]} \cr Zone of Influence (ZoI), in map units meters.
The ZoI is the distance, scale, or buffer size around a feature up to which we consider there is
an effect or influence of an infrastructure or variable. It is considered only when
\code{transform = "bartlett"} or \code{transform = "exp_decay"}. \cr
For the Bartlett influence, it corresponds to the distance beyond which the distance is zero. \cr
For the exponential decay influence, the ZoI is used to define the half-life and the lambda
of the exponential decay function, based on the parameter \code{zoi_hl_ratio},
that defines the ratio between the ZoI and the half-life. Since the half-life is the value
where the exponential decay decreases by \code{0.5}, a ratio of, for instance, \code{zoi_hl_ratio = 4} (default)
would mean that the ZoI is defined as the value where the exponential decay decreases to \code{0.5^4 = 0.0625}.
In this case, if \code{zoi = 4000} m, this means that the ZoI is four times higher than the half-life, i.e.
\code{half_life = 1000} and \code{lambda = log(2)/half_life = 6.93e-4}. The definition of a zone of
influence does not imply a cuttoff of the exponential decay function but is only used to define
its parameters, based on the defined \code{zoi_hl_ratio} parameter.}

\item{extent_x_cut}{\verb{[numeric vector(2)=c(0,1)]} \cr Vectors representing the minimum and
maximum extent in x and y for the final output, in the format c(min,max). Used to cut the raster to
specific smaller extents. The default is to keep the same extent of the input raster.
Not used for computation in GRASS GIS yet, but it might be implemented if necessary.}

\item{...}{\cr Adittional parameters passed to \code{\link[terra:distance]{terra::distance()}} when the calculations are performed in R.
No additional parameters implemented for computation in GRASS GIS.}
}
\value{
A RasterBrick with de distance to the nearest feature and the densities for all scales selected.
}
\description{
This function takes in a raster with locations of infrastructure and calculates (1)
a raster representing the distance from each pixel to the neareast feature and (2)
a raster (or set of rasters, in case there is more the one value for \code{scale})
representing the density of features in space (through a spatial filter/neighborhood analysis).
The neighborhood analysis is done with the \code{\link[raster:focal]{raster::focal()}} function.
}
\details{
The neighborhood analysis can be done with different methods. The default is a Gaussian filter
(\code{type_density = "Gauss"}), in which case scale corresponds to the sigma paramater of the Gaussian
filter. If \code{type_density = "circle"} or \code{type_density = "rectangle"}, the scale corresponds to the
radius of the circle or width of the rectangle, respectively. See \code{\link[raster:focalWeight]{raster::focalWeight()}} for more
details.

TO IMPROVE2: do the same in communication with GRASS GIS.
}
\examples{
library(mobsim)
library(raster)

set.seed(1234)

# set points
ext <- 30000
wd <- ext/20
pts <- set_points(n_features = 1000, centers = 1,
                  width = wd, res = 100,
                  extent_x = c(0, ext), extent_y = c(0, ext),
                  buffer_around = 10000)
plot(pts$pts)
plot(pts$rast)

# calculate distance and densities considering only the initial extent
zoi_values <- c(250, 500, 1000, 2500, 5000)/2
nearest_cumulative <- calc_influence(pts$rast, zoi = zoi_values,
                                     type_cumulative = "Gauss",
                                     extent_x_cut = c(0, ext), extent_y_cut = c(0, ext))
plot(nearest_cumulative)

# calculate exp_decay (the rest is equal)
log_dist_dens <- calc_dist_dens(pts$rast, type_density = "Gauss", scale = scales,
                                transform_dist = "exp_decay", half_life = 200,
                                extent_x_cut = c(0, ext), extent_y_cut = c(0, ext))
plot(log_dist_dens)


# set points
ext <- 30000
wd <- ext/20
pts <- set_points(n_features = 1000, centers = 1,
                  width = wd, res = 100,
                  extent_x = c(0, ext), extent_y = c(0, ext),
                  buffer_around = 0)
plot(pts$pts)
plot(pts$rast)

# calculate distance and densities considering only the initial extent
scales <- c(250, 500, 1000, 2500, 5000)/2
dist_dens <- calc_dist_dens(pts$rast, type_density = "Gauss", scale = scales, pad = T)
plot(dist_dens)
}
